services:
  db:
    image: postgres:17-alpine
    # env file must define POSTGRES_DB, POSTGRES_USER, and POSTGRES_PASSWORD
    env_file: ./backend/.env.local
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  api:
    build: 
      context: ./backend
      target: local
    command:  # Facilitates debugging in containers (only run on local Docker)
      >
      python -m debugpy --listen 0.0.0.0:5678
      manage.py runserver 0.0.0.0:8000 
    ports:
      - "8000:8000"   # Django
      - "5678:5678"   # Debugger
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/backend # bind-mount syncs all files in folder, ignores .dockerignore rules
    environment:
      IS_RUNNING_IN_CONTAINER: "true"
  web:
    build: 
      context: ./frontend
      target: local
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend # bind-mount syncs all files in folder, ignores .dockerignore rules
      - /frontend/node_modules
    environment:
      NODE_ENV: development
volumes:
   postgres_data:
